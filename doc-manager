#!/bin/bash

COMMAND=${1}
PAGE_LIST="Overview Installation Puppet_Conf User_Guide JDL_Guide BLAH_Guide Monitoring Releases"

if [ "x${COMMAND}" == "x" ] ; then
    echo "Missing command";
    echo "Usage: doc-manager compile                    compile the documentation"
    echo "       doc-manager publish <comment for git>  publish the guide in readthedocs"
    echo "       doc-manager clean                      clean up the build directory"
    exit 1;
fi

if [ "x${COMMAND}" == "xclean" ] && [ -d build ] ; then rm -rf build; fi

if [ "x${COMMAND}" == "xcompile" ] || ([ "x${COMMAND}" == "xpublish" ] && [ ! -d build ]) ; then

    if [ ! -d build ] ; then
    
        echo "Checking required applications..."
        which git
        if [ $? -ne 0 ] ; then echo "Missing git package"; exit 1; fi
        which pandoc
        if [ $? -ne 0 ] ; then echo "Missing pandoc package"; exit 1; fi
        which sphinx-build
        if [ $? -ne 0 ] ; then 
            echo "Missing python-sphinx package"
            echo "Required themes available with package python-sphinx-rtd-theme (ubuntu)"
            echo "or python-sphinx_rtd_theme (rhel)"
            exit 1
        fi

        set -e 

        mkdir -p build/prestage
        mkdir -p build/pages/images
        git clone git@github.com:pandreetto/cream-docs.git build/rst

        cp en-US/images/*.png build/rst/images
        cp en-US/images/*.png build/pages/images

    fi

    # Some workarounds
    for item in $PAGE_LIST ; do
        #xsltproc -o build/tmp/${item}.html /usr/share/xml/docbook/stylesheet/docbook-xsl/xhtml/docbook.xsl en-US/${item}.xml
        sed -e 's|<chapter|<section|g' -e 's|</chapter|</section|g' en-US/${item}.xml > build/prestage/${item}.xml
    done

    for item in $PAGE_LIST ; do
        pandoc -f docbook -t rst -o build/rst/${item}.rst build/prestage/${item}.xml
    done

    # Some workarounds
    sed -i -e 's|transitions:|transitions:\n\n.. image:: images/cream_job_states.png|g' build/rst/User_Guide.rst

    sphinx-build -b html build/rst build/pages/

    echo
    echo "For a local preview see file://${PWD}/build/pages/index.html"
fi

if [ "x${COMMAND}" == "xpublish" ] ; then

    COMMENT=${2:-"Changed documentation"}
    
    echo "doc-manager: pushing changes in github..."
    git add en-US/*.xml
    git commit -m "${COMMENT}"
    git push
    echo "doc-manager: github is up-to-date"

    echo "doc-manager: pushing changes in readthedocs..."
    cd build/rst
    git add *.rst
    git commit -m "${COMMENT}"
    git push
    cd -
    echo "doc-manager: readthedocs is up-to-date"
    
fi
