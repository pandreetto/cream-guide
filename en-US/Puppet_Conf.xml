<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<chapter id="Puppet_Conf">
<title>Puppet Configuration</title>

<para>
TODO (short introduction)
</para>

<section id="CREAM_basic">
<title>CREAM service parameters</title>
<para>
These are the basic configuration parameters related to the CREAM service:
<itemizedlist>
    <listitem><para><literal>creamce::batch_system</literal> (string): The installed batch system,
    <emphasis>mandatory</emphasis>, one of "pbs", "slurm", "condor", "lsf"</para></listitem>
    <listitem><para><literal>creamce::host</literal> (string): The fully qualified Computing Element
    host name, default the host name</para></listitem>
    <listitem><para><literal>creamce::port</literal> (integer): The tomcat listen port, default 8443</para></listitem>
    <listitem><para><literal>creamce::site::name</literal> (string): The human-readable name of the site,
    default the host name</para></listitem>
    <listitem><para><literal>creamce::site::email</literal> (string): The main email contact for the site.
    The syntax is a coma separated list of email addresses, default undefined</para></listitem>
    <listitem><para><literal>creamce::sandbox_path</literal> (string): The directory where the sandbox files are staged
    on the CREAM CE node, default "/var/cream_sandbox"</para></listitem>
    <listitem><para><literal>creamce::delegation::purge_rate</literal> (integer): Specifies in minutes how often the
    delegation purger has to run, default 10 minutes</para></listitem>
    <listitem><para><literal>creamce::lease::time</literal> (integer): The maximum allowed lease time in second. If a
    client specifies a lease time too big, this value is used instead, default 36000 seconds.</para></listitem>
    <listitem><para><literal>creamce::lease::rate</literal> (integer): Specifies in minutes how often the job purger
    has to run, default 30 minutes</para></listitem>
</itemizedlist>
</para>
<para>
The following parameters enable and configure the internal monitoring system. Whenever a resource metric exceeds
the related resource limit the CREAM CE suspends the job submission.
<itemizedlist>
    <listitem><para><literal>creamce::enable_limiter</literal> (boolean): In order to disable the limiter,
    it is needed to set this parameter value to false and restart the service, default true</para></listitem>
    <listitem><para><literal>creamce::limit::load1</literal> (integer): Limiter threshold for the load average
    (1 minute), default 40</para></listitem>
    <listitem><para><literal>creamce::limit::load5</literal> (integer): Limiter threshold for the load average
    (5 minute), default 40</para></listitem>
    <listitem><para><literal>creamce::limit::load15</literal> (integer): Limiter threshold for the load average
    (15 minute), default 20</para></listitem>
    <listitem><para><literal>creamce::limit::memusage</literal> (integer): Limiter threshold for the memory usage,
    default 95 (percentage)</para></listitem>
    <listitem><para><literal>creamce::limit::swapusage</literal> (integer): Limiter threshold for the swap usage,
    default 95 (percentage)</para></listitem>
    <listitem><para><literal>creamce::limit::fdnum</literal> (integer): Limiter threshold for the number of file
    descriptors, default 500</para></listitem>
    <listitem><para><literal>creamce::limit::diskusage</literal> (integer): Limiter threshold for the disk usage,
    default 95 (percentage)</para></listitem>
    <listitem><para><literal>creamce::limit::ftpconn</literal> (integer): Limiter threshold for the number of
    concurrent ftp connections, default 30</para></listitem>
    <listitem><para><literal>creamce::limit::fdtomcat</literal> (integer): Limiter threshold for the number of
    file descriptors, default 800</para></listitem>
    <listitem><para><literal>creamce::limit::activejobs</literal> (integer): Limiter threshold for the number of
    active jobs, default -1 (unlimited)</para></listitem>
    <listitem><para><literal>creamce::limit::pendjobs</literal> (integer): Limiter threshold for the number of
    pending jobs, default -1 (unlimited)</para></listitem>
</itemizedlist>
</para>
<para>
The following parameters configure the internal job purger mechanism, all the values are expressed in number of days
<itemizedlist>
    <listitem><para><literal>creamce::job::purge_rate</literal> (integer): Specifies in minutes how often the job
    purger has to run, default 300 minutes.</para></listitem>
    <listitem><para><literal>creamce::purge::aborted</literal> (integer): Specifies how often the job purger deletes
    the aborted jobs, default 10 days</para></listitem>
    <listitem><para><literal>creamce::purge::cancel</literal> (integer): Specifies how often the job purger deletes the
    cancelled jobs, default 10 days</para></listitem>
    <listitem><para><literal>creamce::purge::done</literal> (integer): Specifies how often the job purger deletes the
    executed jobs, default 10 days</para></listitem>
    <listitem><para><literal>creamce::purge::failed</literal> (integer): Specifies how often the job purger deletes the
    failed jobs, default 10 days</para></listitem>
    <listitem><para><literal>creamce::purge::register</literal> (integer): Specifies how often the job purger deletes
    the registered jobs, default 2 days</para></listitem>
</itemizedlist>
</para>
<para>
The following parameters configure the job wrapper:
<itemizedlist>
    <listitem><para><literal>creamce::jw::proxy_retry_wait</literal> (integer): The minimum time interval expressed in
    seconds, between the first attempt and the second one for retrieving the user delegation proxy,
    default 60</para></listitem>
    <listitem><para><literal>creamce::jw::isb::retry_count</literal> (integer): The maximum number of ISB file transfers
    that should be tried, default 2</para></listitem>
    <listitem><para><literal>creamce::jw::isb::retry_wait</literal> (integer): If during a input sandbox file transfer
    occurs a failure, the JW retries the operation after a while. The sleep time between the first attempt and the
    second one is the “initial wait time” (i.e. the wait time between the first attempt and the second one) expressed
    in seconds. In every next attempt the sleep time is doubled. Default 60 seconds.</para></listitem>
    <listitem><para><literal>creamce::jw::osb::retry_count</literal> (integer): The maximum number of ISB file transfers
    that should be tried, default 2</para></listitem>
    <listitem><para><literal>creamce::jw::osb::retry_wait</literal> (integer): If during a output sandbox file transfer
    occurs a failure, the JW retries the operation after a while. The sleep time between the first attempt and the
    second one is the “initial wait time” (i.e. the wait time between the first attempt and the second one) expressed
    in seconds. In every next attempt the sleep time is doubled. Default 300 seconds.</para></listitem>
</itemizedlist>

</para>
</section><!-- end of CREAM_basic -->


<section id="CREAM_DB">
<title>CREAM Database</title>
The following parameters configure the CREAM back-end:
<itemizedlist>
    <listitem><para><literal>creamce::mysql::root_password</literal> (string): root password for the database
    administrator, <emphasis>mandatory</emphasis></para></listitem>
    <listitem><para><literal>creamce::creamdb::password</literal> (string): The database user password for the main
    operator, <emphasis>mandatory</emphasis></para></listitem>
    <listitem><para><literal>creamce::creamdb::minpriv_password</literal> (string): The database user password for the
    monitor agent, <emphasis>mandatory</emphasis></para></listitem>
    <listitem><para><literal>creamce::mysql::max_active</literal> (integer): The maximum number of active database
    connections that can be allocated from this pool at the same time, or negative for no limit,
    default 200</para></listitem>
    <listitem><para><literal>creamce::mysql::min_idle</literal> (integer): The minimum number of connections that can
    remain idle in the pool, without extra ones being created, or zero to create none, default 30</para></listitem>
    <listitem><para><literal>creamce::mysql::max_wait</literal> (integer): The maximum number of milliseconds that the
    pool will wait for a connection to be returned before throwing an exception, or -1 to wait indefinitely,
    default 10000</para></listitem>
    <listitem><para><literal>creamce::mysql::override_options</literal> (hash): see the override option defined in
    https://forge.puppet.com/puppetlabs/mysql,default
    <screen>{'mysqld' => {'bind-address' => '0.0.0.0', 'max_connections' => "450" }}</screen></para></listitem>
    <listitem><para><literal>creamce::creamdb::name</literal> (string): The database name for the CREAM service,
    default "creamdb"</para></listitem>
    <listitem><para><literal>creamce::creamdb::user</literal> (string): The database user name with user acting as main
    operator, default "cream"</para></listitem>
    <listitem><para><literal>creamce::creamdb::host</literal> (string): The fully qualified host name for any CE
    databases, default the host name</para></listitem>
    <listitem><para><literal>creamce::creamdb::port</literal> (integer): The mysql listen port for any CE databases,
    default 3306</para></listitem>
    <listitem><para><literal>creamce::creamdb::minpriv_user</literal> (string): The database user name with user acting
    as monitor agent, default "minprivuser"</para></listitem>
    <listitem><para><literal>creamce::delegationdb::name</literal> (string): The database name for the Delegation
    Service, default "delegationcreamdb"</para></listitem>
</itemizedlist>
<para>
</para>
</section><!-- end of CREAM_DB -->


<section id="BLAH_config">
<title>BLAH</title>
<para>
These are the basic configuration parameters for BLAH:
<itemizedlist>
    <listitem><para><literal>blah::config_file</literal> (string): The path of the main BLAH configuration file,
    default "/etc/blah.config"</para></listitem>
    <listitem><para><literal>blah::logrotate::interval</literal> (integer): The interval in days for log rotation,
    default 365 days</para></listitem>
    <listitem><para><literal>blah::logrotate::size</literal> (string): The size of a log file in MB,
    default "10M"</para></listitem>
    <listitem><para><literal>blah::use_blparser</literal> (boolean): If true it enables the BLParser service
    otherwise BUpdater/BNotifier is used, default false</para></listitem>
    <listitem><para><literal>creamce::blah_timeout</literal> (integer): Represents the maximum time interval in seconds
    accepted by CREAM for the execution of commands by BLAH, default 300 seconds</para></listitem>
    <listitem><para><literal>creamce::job::prefix</literal> (string): The prefix to be used for the BLAH job id, default
    "cream_"</para></listitem>
    <listitem><para><literal>blah::shared_directories</literal> (list): A list of of paths that are shared among batch
    system head and worker nodes; the empty list is the default value</para></listitem>
</itemizedlist>
</para>
<para>
The following parameters configure BLAH if BNotifier/BUpdater are enabled:
<itemizedlist>
    <listitem><para><literal>blah::bupdater::loop_interval</literal> (integer): The interval in seconds between two
    BUpdater sessions, default 30 seconds.</para></listitem>
    <listitem><para><literal>blah::bupdater::notify_port</literal> (integer): The service port for the BNotifier,
    default 56554</para></listitem>
    <listitem><para><literal>blah::bupdater::logrotate::interval</literal> (integer): The interval in days for log
    rotation, default 50</para></listitem>
    <listitem><para><literal>blah::bupdater::logrotate::size</literal> (string): The size of a log file in MB,
    default "10M"</para></listitem>
</itemizedlist>
</para>
<para>
The following parameters configure BLAH if the BLParser is enabled:
<itemizedlist>
    <listitem><para><literal>blah::blp::host</literal> (string): The host name for the primary BLParser,
    <emphasis>mandatory</emphasis> if BLParser is used, default undefined</para></listitem>
    <listitem><para><literal>blah::blp::port</literal> (integer): The service port for the primary BLParser,
    default 33333</para></listitem>
    <listitem><para><literal>blah::blp::num</literal> (integer): The number of BLParser enabled instances,
    default 1</para></listitem>
    <listitem><para><literal>blah::blp::host1</literal> (string): The host name for the secondary BLParser,
    default undefined</para></listitem>
    <listitem><para><literal>blah::blp::port1</literal> (integer): The service port for the secondary BLParser,
    default 33334</para></listitem>
    <listitem><para><literal>creamce::listener_port</literal> (integer): The port used by CREAM to receive notifications
    about job status changes sent by the BLParser/JobWrapper, default 49152</para></listitem>
    <listitem><para><literal>creamce::blp::retry_delay</literal> (integer): The time interval in seconds between two
    attempts to contact the BLAH parser, default 60 seconds</para></listitem>
    <listitem><para><literal>creamce::blp::retry_count</literal> (integer): Represents the number of attempts to contact
    the BLAH parser (if it is not reachable) before giving up. If -1 is specified, CREAM will never give up ,
    default 100</para></listitem>
</itemizedlist>
</para>
</section><!-- end of BLAH_config -->


<section id="Infosys">
<title>CREAM information system</title>
<para>
The following parameters configure the Resource BDII:
<itemizedlist>
    <listitem><para><literal>bdii::params::user</literal> (string): The local user running the BDII service,
    default "ldap"</para></listitem>
    <listitem><para><literal>bdii::params::group</literal> (string): The local group running the BDII service,
    default "ldap"</para></listitem>
    <listitem><para><literal>bdii::params::port</literal> (integer): The BDII service port,
    default 2170</para></listitem>
    <listitem><para><literal>creamce::use_locallogger</literal> (boolean): True if the local logger service must be
    installed and configured, default is false</para></listitem>
    <listitem><para><literal>creamce::info::capability</literal> (list): The list of capability for a CREAM site;
    it's a list of string, in general with format "name=value", default empty list</para></listitem>
    <listitem><para><literal>creamce::vo_software_dir</literal> (string): The base directory for installation of the
    software used by Virtual Organizations</para></listitem>
    <listitem><para><literal>creamce::workarea::shared</literal> (boolean): True if the working area is shared across
    different Execution Environment instances, typically via an NFS mount; this attribute applies to single-slot jobs,
    default false</para></listitem>
    <listitem><para><literal>creamce::workarea::guaranteed</literal> (boolean): True if the job is guaranteed the full
    extent of the WorkingAreaTotal; this attribute applies to single-slot jobs, default false</para></listitem>
    <listitem><para><literal>creamce::workarea::total</literal> (integer): Total size in GB of the working area
    available to all single-slot jobs, default 0</para></listitem>
    <listitem><para><literal>creamce::workarea::free</literal> (integer): The amount of free space in GB currently
    available in the working area to all single-slot jobs, default 0 GB</para></listitem>
    <listitem><para><literal>creamce::workarea::lifetime</literal> (integer): The minimum guaranteed lifetime in seconds
    of the files created by single-slot jobs in the working area, default 0 seconds</para></listitem>
    <listitem><para><literal>creamce::workarea::mslot_total</literal> (integer): The total size in GB of the working
    area available to all the multi-slot Grid jobs shared across all the Execution Environments,
    default 0GB</para></listitem>
    <listitem><para><literal>creamce::workarea::mslot_free</literal> (integer): The amount of free space in GB currently
    available in the working area  to all multi-slot jobs shared across all the Execution Environments,
    default 0 GB</para></listitem>
    <listitem><para><literal>creamce::workarea::mslot_lifetime</literal> (integer): The minimum guaranteed lifetime in
    seconds of the files created by multi-slot jobs in the working area, default 0 seconds</para></listitem>
</itemizedlist>
</para>

<section id="Hardware_table">
<title>Hardware table</title>
<para>
The hardware table contains any information about the resources of the site; the parameter to be used is
<literal>creamce::hardware_table</literal>. The hardware table is a hash table with the following structure:
<itemizedlist>
    <listitem><para>the key of an entry in the table is the ID assigned to the homogeneous sub-cluster of machines
    (see GLUE2 execution environment).</para></listitem>
    <listitem><para>the value of an entry in the table is a hash containing the definitions for the homogeneous
    sub-cluster, the supported mandatory keys are:
    <itemizedlist>
        <listitem><para><literal>ce_cpu_model</literal> (string): The name of the physical CPU model, as defined by
        the vendor, for example "XEON"</para></listitem>
        <listitem><para><literal>ce_cpu_speed</literal> (integer): The nominal clock speed of the physical CPU,
        expressed  in MHz</para></listitem>
        <listitem><para><literal>ce_cpu_vendor</literal> (string): The name of the physical CPU vendor, for example
        "Intel"</para></listitem>
        <listitem><para><literal>ce_cpu_version</literal> (string): The specific version of the Physical CPU model
        as defined by the vendor</para></listitem>
        <listitem><para><literal>ce_physcpu</literal> (integer): The number of physical CPUs (sockets) in a work node
        of the sub-cluster</para></listitem>
        <listitem><para><literal>ce_logcpu</literal> (integer): The number of logical CPUs (cores) in a worker node
        of the sub-cluster</para></listitem>
        <listitem><para><literal>ce_minphysmem</literal> (integer): The total amount of physical RAM in a worker node
        of the sub-cluster, expressed in MB</para></listitem>
        <listitem><para><literal>ce_os_family</literal> (string): The general family of the Operating System installed
        in a worker node ("linux", "macosx", "solaris", "windows")</para></listitem>
        <listitem><para><literal>ce_os_name</literal> (string): The specific name Operating System installed in a
        worker node, for example "RedHat"</para></listitem>
        <listitem><para><literal>ce_os_arch</literal> (string): The platform type of worker node, for example "x86_64"
        </para></listitem>
        <listitem><para><literal>ce_os_release</literal> (string): The version of the Operating System installed in a
        worker node, as defined by the vendor, for example "7.0.1406"</para></listitem>
        <listitem><para><literal>nodes</literal> (list): The list of the name of the worker nodes of the 
        sub-cluster</para></listitem>
    </itemizedlist>
    the supported optional keys are:
    <itemizedlist>
        <listitem><para><literal>ce_minvirtmem</literal> (integer): The total amount of virtual memory (RAM and swap
        space) in a worker node of the sub-cluster, expressed in MB</para></listitem>
        <listitem><para><literal>ce_outboundip</literal> (boolean): True if a worker node has out-bound connectivity,
        false otherwise, default true</para></listitem>
        <listitem><para><literal>ce_inboundip</literal> (boolean): True if a worker node has in-bound connectivity,
        false otherwise default false</para></listitem>
        <listitem><para><literal>ce_runtimeenv</literal> (list): The list of tags associated to the software packages
        installed in the worker node, the definitions for a tag is listed in the software table, default empty
        list</para></listitem>
        <listitem><para><literal>ce_benchmarks</literal> (hash): The hash table containing the values of the standard
        benchmarks ("specfp2000", "specint2000", "hep-spec06"); each key of the table corresponds to the benchmark name,
        default empty hash</para></listitem>
        <listitem><para><literal>subcluster_tmpdir</literal> (string): The path of a temporary directory shared across
        worker nodes (see GLUE 1.3)</para></listitem>
        <listitem><para><literal>subcluster_wntmdir</literal> (string): The path of a temporary directory local to each
        worker node (see GLUE 1.3)</para></listitem>
    </itemizedlist>
    </para></listitem>
</itemizedlist>
</para>
</section><!-- end of Hardware_table -->


<section id="Software_table">
<title>Software table</title>
<para>
The software table is a hash with the following structure:
<itemizedlist>
    <listitem><para>the key of an entry in the table is the tag assigned to the software installed on the machines
    (see GLUE2 application environment); tags are used as a reference (<literal>ce_runtimeenv</literal>) in the
    hardware table.</para></listitem>
    <listitem><para>the value of an entry in the table is a hash containing the definitions for the software installed
    on the machines, the supported keys are:
    <itemizedlist>
        <listitem><para><literal>name</literal> (string): The name of the software installed, for example the package
        name, <emphasis>mandatory</emphasis></para></listitem>
        <listitem><para><literal>version</literal> (string): The version of the software installed,
        <emphasis>mandatory</emphasis></para></listitem>
        <listitem><para><literal>license</literal> (string): The license of the software installed, default
        unpublished</para></listitem>
        <listitem><para><literal>description</literal> (string): The description of the software installed, default
        unpublished</para></listitem>
    </itemizedlist>
    </para></listitem>
</itemizedlist>
</para>
</section><!-- end of Software_table -->

<section id="Queues_table">
<title>Queues table</title>
<para>
The queue table contains definitions for local user groups; the parameter to be declared is
<literal>creamce::queues</literal>. The queues table is a hash with the following structure:
<itemizedlist>
    <listitem><para>the key of an entry in the table is the name of the batch system queue/partition.</para></listitem>
    <listitem><para>the value of an entry in the table is a hash table containing the definitions for the related
    queue/partition, the supported keys for definitions are:
    <itemizedlist>
        <listitem><para><literal>groups</literal> (list): The list of local groups which are allowed to operate the
        queue/partition, each group <emphasis>MUST BE</emphasis> defined in the VO table.</para></listitem>
    </itemizedlist>
    </para></listitem>
</itemizedlist>
</para>
</section><!-- end of Queues_table -->


<section id="Storage_table">
<title>Storage table</title>
The storage table contains any information about the set of storage elements bound to this site. The parameter to
be declared is <literal>creamce::se_table</literal>, the default value is an empty hash.
The storage element table is a hash with the following structure:
<para>
<literal>creamce::queues</literal>. The queues table is a hash with the following structure:
<itemizedlist>
    <listitem><para>the key of an entry in the table is the name of the storage element host.</para></listitem>
    <listitem><para>the value of an entry in the table is a hash table containing the definitions for the related
    storage element, the supported keys for definitions are:
    <itemizedlist>
        <listitem><para><literal>type</literal> (string): The name of the application which is installed in the
        storage element ("Storm", "DCache", etc.)</para></listitem>
        <listitem><para><literal>mount_dir</literal> (string): The local path within the Computing Service which makes
        it possible to access files in the associated Storage Service (this is typically an NFS mount point)
        </para></listitem>
        <listitem><para><literal>export_dir</literal> (string): The remote path in the Storage Service which is
        associated to the local path in the Computing Service (this is typically an NFS exported directory).
        </para></listitem>
        <listitem><para><literal>default</literal> (boolean): True if the current storage element must be considered
        the primary SE, default false. Just one item in the storage element table can be marked as primary.
        </para></listitem>
    </itemizedlist>
    </para></listitem>
</itemizedlist>
</para>
</section><!-- end of Storage_table -->

<section id="Infosys_example">
<title>Example</title>

<para>
<screen>
---
creamce::queues :
    long :  { groups : [ dteam, dteamprod ] }
    short : { groups : [ dteamsgm ] }

creamce::hardware_table :
    subcluster001 : {
        ce_cpu_model : XEON,
        ce_cpu_speed : 2500,
        ce_cpu_vendor : Intel,
        ce_cpu_version : 5.1,
        ce_physcpu : 2,
        ce_logcpu : 2,
        ce_minphysmem : 2048,
        ce_minvirtmem : 4096,
        ce_os_family : "linux",
        ce_os_name : "CentOS",
        ce_os_arch : "x86_64",
        ce_os_release : "7.0.1406",
        ce_outboundip : true,
        ce_inboundip : false,
        ce_runtimeenv : [ "tomcat_6_0", "mysql_5_1" ],
        subcluster_tmpdir : /var/tmp/subcluster001,
        subcluster_wntmdir : /var/glite/subcluster001,
        ce_benchmarks : { specfp2000 : 420, specint2000 : 380, hep-spec06 : 780 },
        nodes : [ "node-01.mydomain", "node-02.mydomain", "node-03.mydomain" ]
        # Experimental support to GPUs
        accelerators : {
            acc_device_001 : {
                type : GPU,
                log_acc : 4,
                phys_acc : 2,
                vendor : NVidia,
                model : "Tesla k80",
                version : 4.0,
                clock_speed : 3000,
                memory : 4000 
            }
        }
    }

creamce::software_table :
    tomcat_6_0 : {
        name : "tomcat",
        version : "6.0.24",
        license : "ASL 2.0",
        description : "Tomcat is the servlet container" 
    }
    mysql_5_1 : {
        name : "mysql",
        version : "5.1.73",
        license : "GPLv2 with exceptions",
        description : "MySQL is a multi-user, multi-threaded SQL database server" 
    }

creamce::vo_software_dir : /afs

creamce::se_table :
    storage.pd.infn.it : { mount_dir : "/data/mount", export_dir : "/storage/export",
                           type : Storm, default : true }
    cloud.pd.infn.it : { mount_dir : "/data/mount", export_dir : "/storage/export",
                         type : Dcache }
</screen>
</para>
</section><!-- end of Infosys_example -->

</section><!-- end of Infosys -->


<section id="CREAM_security">
<title>CREAM security and accounting</title>
<para>
The following parameters configure the security layer and the pool account system:
<itemizedlist>
    <listitem><para><literal>creamce::host_certificate</literal> (string):  The complete path of the installed host
    certificate, default /etc/grid-security/hostcert.pem</para></listitem>
    <listitem><para><literal>creamce::host_private_key</literal> (string): The complete path of the installed host key,
    default /etc/grid-security/hostkey.pem</para></listitem>
    <listitem><para><literal>creamce::voms_dir</literal> (string): The location for the deployment of VO description
    files (LSC), default /etc/grid-security/vomsdir</para></listitem>
    <listitem><para><literal>creamce::gridmap_dir</literal> (string): The location for the pool account files,
    default /etc/grid-security/gridmapdir</para></listitem>
    <listitem><para><literal>creamce::gridmap_file</literal> (string): The location of the pool account description file,
    default /etc/grid-security/grid-mapfile</para></listitem>
    <listitem><para><literal>creamce::gridmap_extras</literal> (list): The list of custom entry for the pool account
    description file, default empty list</para></listitem>
    <listitem><para><literal>creamce::gridmap_cron_sched</literal> (string): The cron time parameters for the pool
    account cleaner, default "5 * * * *"</para></listitem>
    <listitem><para><literal>creamce::groupmap_file</literal> (string): The path of the groupmap file,
    default /etc/grid-security/groupmapfile</para></listitem>
    <listitem><para><literal>creamce::crl_update_time</literal> (integer): The CRL refresh time in seconds,
    default 3600 seconds</para></listitem>
    <listitem><para><literal>creamce::ban_list_file</literal> (string): The path of the ban list file, if gJAF/LCMAPS is
    used, default /etc/lcas/ban_users.db</para></listitem>
    <listitem><para><literal>creamce::ban_list</literal> (list): The list of banned users, each item is a Distinguished
    Name in old openssl format. If not defined the list is not managed by puppet.</para></listitem>
    <listitem><para><literal>creamce::use_argus</literal> (boolean): True if Argus authorization framework must be used,
    false if gJAF must be used, default true</para></listitem>
    <listitem><para><literal>creamce::argus::service</literal> (string): The argus PEPd service host name,
    <literal>mandatory</literal> if <literal>creamce::use_argus</literal> is set to true</para></listitem>
    <listitem><para><literal>creamce::argus::port</literal> (integer): The Argus PEPd service port,
    default 8154</para></listitem>
    <listitem><para><literal>creamce::argus::timeout</literal> (integer): The connection timeout in seconds for the
    connection to the Argus PEPd server, default 30 seconds</para></listitem>
    <listitem><para><literal>creamce::argus::resourceid</literal> (string): The ID of the CREAM service to be registered
    in Argus, default <literal>https://{ce_host}:{ce_port}/cream</literal></para></listitem>
    <listitem><para><literal>creamce::admin::list</literal> (list): The list of service administators Distinguished Name,
    default empty list</para></listitem>
    <listitem><para><literal>creamce::admin::list_file</literal> (string): The path of the file containing the service
    administrators list, default /etc/grid-security/admin-list</para></listitem>
    <listitem><para><literal>creamce::default_pool_size</literal> (integer): The default number of users in a pool
    account, used if <literal>pool_size</literal> is not define for a VO group, default 100</para></listitem>
</itemizedlist>
</para>



<section id="VO_table">
<title>VO table</title>
<para>
The VO table contains any information related to pool accounts, groups and VO data.
The parameter to be declared is <literal>creamce::vo_table</literal>, the default value is an empty hash.
The VO table is a hash, the key of an entry in the table is the name or ID of the virtual organization, 
the corresponding value is a hash table containing the definitions for the virtual organization,the supported keys
for definitions are:
<itemizedlist>
    <listitem><para><literal>servers</literal> (list): The list of configuration details for the VOMS servers.
    Each item in the list is a hash; the parameter and any supported keys of a contained hash are 
    <literal>mandatory</literal>. The supported keys are:
    <itemizedlist>
        <listitem><para><literal>server</literal> (string): The VOMS server FQDN</para></listitem>
        <listitem><para><literal>port</literal> (integer): The VOMS server port</para></listitem>
        <listitem><para><literal>dn</literal> (string): The distinguished name of the VOMS server, as declared in the
        VOMS service certificate</para></listitem>
        <listitem><para><literal>ca_dn</literal> (string): The distinguished name of the issuer of the VOMS service
        certificate</para></listitem>
    </itemizedlist>
    </para></listitem>
    <listitem><para><literal>groups</literal> (hash): The list of local groups and associated FQANs, the parameter
    is <literal>mandatory</literal>, each key of the hash is the group name, each value is a hash with the following 
    keys:
    <itemizedlist>
        <listitem><para><literal>gid</literal> (string): The unix group id, <literal>mandatory</literal>
        </para></listitem>
        <listitem><para><literal>fqan</literal> (list): The list of VOMS Fully Qualified Attribute Name,
        <literal>mandatory</literal></para></listitem>
        <listitem><para><literal>pub_admin</literal> (boolean): True if the group is the defined administrator group,
        default false, just one administrator group is supported</para></listitem>
    </itemizedlist>
    </para></listitem>
    <listitem><para><literal>users</literal> (hash): The description of pool accounts or a static users, the parameter 
    is <literal>mandatory</literal>, each key of the hash is the pool account prefix or the user name for a static
    user, each value is a hash with the following keys:
    <itemizedlist>
        <listitem><para><literal>name_pattern</literal> (list): The pattern used to create the user name of the pool
        account, the variables used for the  substitutions are <literal>prefix</literal>, the pool account prefix,
        and <literal>index</literal>, a consecutive index described below; the expression is explained in the ruby
        <ulink url="https://ruby-doc.org/core-2.2.0/Kernel.html#method-i-sprintf">guide</ulink>,
        default value is <screen>%&lt;prefix&gt;s%03&lt;index&gt;d</screen></para></listitem>
        <listitem><para><literal>fqan</literal> (list): The list of VOMS Fully Qualified Attribute Name associated with
        the user of the pool account. The first element of the list is considered the primary FQAN and it is used
        to calculate the primary group of the user; the other FQANs are used to calculate the secondary groups.
        The mapping between FQANs and groups refers to the <literal>groups</literal> hash for the given VO. For 
        further details about the mapping algorithm refer to the authorization
        <ulink url="https://twiki.cern.ch/twiki/bin/view/EGEE/AuthZOH#Account_and_Group_Mapping">guide</ulink>.
        The parameter is <literal>mandatory</literal></para></listitem>
        <listitem><para><literal>accounts</literal> (list): The list of SLURM accounts associated with this set of
        users, the parameter is <literal>mandatory</literal> if <literal>slurm::config_accounting</literal>
        is set to true</para></listitem>
    </itemizedlist>
    A pool account can be defined in two different ways. If the user IDs are consecutive the parameters required are:
    <itemizedlist>
        <listitem><para><literal>first_uid</literal> (integer): The initial number for the unix user id of the pool
        account, the other ids are obtained incrementally with step equals to 1</para></listitem>
        <listitem><para><literal>pool_size</literal> (integer): The number of user in the current pool account, the
        default value is global definition contained into <literal>creamce::default_pool_size</literal>. If the value
        for the pool size is equal to zero the current definition must be considered for a static user.
        </para></listitem>
    </itemizedlist>
    If the user IDs are not consecutive their values must be specified with the parameter:
    <itemizedlist>
        <listitem><para><literal>uid_list</literal> (list): The list of user ID; the pool account size is equal to
        the number of elements of the list. 
        </para></listitem>
    </itemizedlist>
    In any case the user name is created using the pattern specified by the parameter <literal>name_pattern</literal>
    where the index ranges from 1 to the pool account size (included). It is possible to shift the range of the indexes
    using the parameter <literal>creamce::username_offset</literal>.
    </para></listitem>
    <listitem><para><literal>vo_app_dir</literal> (_string_): The path of a shared directory available for application
    data for the current Virtual Organization, as describe by Info.ApplicationDir in GLUE 1.3.</para></listitem>
    <listitem><para><literal>vo_default_se</literal> (string): The default Storage Element associated with the current
    Virtual Organization. It must be one of the key of the storage element table</para></listitem>
</itemizedlist>
</para>
</section><!-- end of VO_table -->



<section id="Security_example">
<title>Example</title>

<para>
<screen>
---
creamce::use_argus :                 false
creamce::default_pool_size :         10
creamce::username_offset :           1

creamce::vo_table :
    dteam : { 
        vo_app_dir : /afs/dteam, 
        vo_default_se : storage.pd.infn.it,
        servers : [
                      {
                          server : voms.hellasgrid.gr,
                          port : 15004,
                          dn : /C=GR/O=HellasGrid/OU=hellasgrid.gr/CN=voms.hellasgrid.gr,
                          ca_dn : "/C=GR/O=HellasGrid/OU=Certification Authorities/CN=HellasGrid CA 2016"
                      },
                      {
                          server : voms2.hellasgrid.gr,
                          port : 15004,
                          dn : /C=GR/O=HellasGrid/OU=hellasgrid.gr/CN=voms2.hellasgrid.gr,
                          ca_dn : "/C=GR/O=HellasGrid/OU=Certification Authorities/CN=HellasGrid CA 2016"
                      }
        ],
        groups : {
            dteam : { fqan : [ "/dteam" ], gid : 9000 },
            dteamsgm : { fqan : [ "/dteam/sgm/ROLE=developer" ], gid : 9001, pub_admin : true },
            dteamprod : { fqan : [ "/dteam/prod/ROLE=developer" ], gid : 9002 }
        },
        users : {
            dteamusr : { first_uid : 6000, fqan : [ "/dteam" ], 
                         name_pattern : "%&lt;prefix>s%03%&lt;index>d" },
            dteamsgmusr : { first_uid : 6100, fqan : [ "/dteam/sgm/ROLE=developer", "/dteam" ],
                            pool_size : 5, name_pattern : "%&lt;prefix&gt;s%02&lt;index&gt;d" },
            dteamprodusr : { fqan : [ "/dteam/prod/ROLE=developer", "/dteam" ],
                             name_pattern : "%&lt;prefix&gt;s%02&lt;index&gt;d",
                             uid_list  : [ 6200, 6202, 6204, 6206, 6208 ] }
        }
    }
</screen>
</para>
</section><!-- end of Security_example -->

</section><!-- end of CREAM_security -->


<!--       Undocumented

* **creamce::quality_level** (_string_): The service level of the Computing Element, default "production"
* **creamce::environment** (_hash_): The environment variables passed to the CE, default empty hash
* **creamce::gridenvfile::sh** (_string_): The path of the environment definitions (standard shell), default "/etc/profile.d/grid-env.sh"
* **creamce::gridenvfile::csh** (_string_): The path of the environment definitions (korn shell), default "/etc/profile.d/grid-env.csh"
* **creamce::cga::logfile** (_string_): The path of the log file for grid account cleaner, default "/var/log/cleanup-grid-accounts.log"
* **creamce::cga::cron_sched** (_string_): The time parameters for the grid account cleaner cron script, default "30 1 * * *"
* **creamce::at_deny_extras** (_list_): Extra items to be inserted into the ban list for the command at, default empty list
* **creamce::cron_deny_extras** (_list_): Extra items to be inserted into the ban list for cron, default empty list
* **creamce::sudo_logfile** (_string_): The path of the log file for sudo, default empty string (log on syslog)

* **creamce::repo_urls** (_list_): The list of URL for downloading the CREAM softare repo-file, default empty list 
(manual installation required)
* **creamce::rpm_key_urls** (_list_): The list of URL for downloading the GnuPG public key file used to verify the packages, 
default empty list (manual installation required)

-->

<section id="CREAM_TORQUE">
<title>CREAM with TORQUE</title>
<para>
The TORQUE cluster must be install before the deployment of CREAM, there's no support in the CREAM CE puppet module
for the deployment of TORQUE. Nevertheless the module may be used to configure the TORQUE client on CREAM CE node if
and only if the node is different from the TORQUE server node. The YAML parameter which enables the TORQUE client
configuration is <literal>torque::config::client</literal>, if it is set to false the configuration is disabled,
the default value is true. The CREAM CE puppet module can create queues and pool accounts in TORQUE, the YAML parameter
is <literal>torque::config::pool</literal>, if it is set to false the feature is disabled, the default value is true.
</para>
<para>
Other configuration parameters for TORQUE are:
<itemizedlist>
    <listitem><para><literal>torque::host</literal> (string): The TORQUE server host name, default value is
    the host name.</para></listitem>
    <listitem><para><literal>torque::multiple_staging</literal> (boolean): The BLAH parameter for multiple staging,
    default false</para></listitem>
    <listitem><para><literal>torque::tracejob_logs</literal> (integer): The BLAH parameter for tracejob,
    default 2</para></listitem>
    <listitem><para><literal>munge::key_path</literal> (string): The location of the munge key. If TORQUE client
    configuration is enabled the path is used to retrieve the manually installed key; <literal>mandatory</literal>
    if <literal>torque::config::client</literal> is set to true.</para></listitem>
</itemizedlist>
</para>
</section><!-- end of CREAM_TORQUE -->

<section id="CREAM_SLURM">
<title>CREAM with SLURM</title>
<para>
The SLURM cluster must be install before the deployment of CREAM, there's no support in the CREAM CE puppet module for
the deployment of SLURM. The module provides an experimental feature for configuring SLURM users and accounts if the
accounting is enabled in SLURM. The YAML parameter which enables the experimental feature is
<literal>slurm::config_accounting</literal>, the default value is false. If it is set to true each user of the pool
account is replicated in the SLURM accounting system. The list of SLURM accounts associated to the new user is specified
by the parameter <literal>accounts</literal> of the <literal>users</literal> definition of the VO table.
</para>
</section><!-- end of CREAM_SLURM -->

<section id="CREAM_HTCondor">
<title>CREAM with HTCondor</title>
<para>
The HTCondor cluster must be install before the deployment of CREAM, there's no support in the CREAM CE puppet module
for the deployment of HTCondor.
</para>
</section><!-- end of CREAM_HTCondor -->


<section id="Exp_Features">
<title>Experimental features</title>
<para>
The features described in this section are subject to frequent changes and must be considered unstable.
Use them at your own risk.
</para>

<section id="GPU_Support">
<title>GPU support configuration</title>
<para>
The GPU support in the information system (BDII) can be enabled with the configuration parameter
<literal>creamce::info::glue21_draft</literal>(boolean), the default value is false. The GPU resources must be
described in the hardware table, inserting in the related sub-cluster hashes the following parameter:
<itemizedlist>
    <listitem><para><literal>accelerators</literal> (_hash_): The hash table containing the definitions for any
    accelerator device mounted in the sub-cluster. Each item in the table is a key-value couple. The key is the
    accelerator ID of the device and the value consists on a hash table with the following mandatory definitions:
    <itemizedlist>
        <listitem><para><literal>type</literal> (string): The type of the device (GPU, MIC, FPGA)</para></listitem>
        <listitem><para><literal>log_acc</literal> (integer): The number of logical accelerator unit in the
        sub-cluster</para></listitem>
        <listitem><para><literal>phys_acc</literal> (integer): The number of physical accelerator device (cards)
        in the subcluster</para></listitem>
        <listitem><para><literal>vendor</literal> (string): The vendor ID</para></listitem>
        <listitem><para><literal>model</literal> (string): The model of the device</para></listitem>
        <listitem><para><literal>version</literal> (string): The version of the device</para></listitem>
        <listitem><para><literal>clock_speed</literal> (integer): The clock speed of the device in MHz</para></listitem>
        <listitem><para><literal>memory</literal> (integer): The amount of memory in the device in MByte</para></listitem>
    </itemizedlist>
    </para></listitem>
</itemizedlist>
</para>
</section>

</section><!-- end of Exp_Features -->



</chapter>
