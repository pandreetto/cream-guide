<?xml version='1.0' encoding='utf-8' ?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">

<chapter id="CREAM_Monitor">
<title>CREAM monitoring</title>

<para>
The CREAM CE site is monitored with the Nagios framework and a set of specific probes.
The service can be tested with job submission through WMS or with direct submittion (i.e. using CREAM CLI).
The probes developed for the CREAM service must be installed on a User Interface because they use the cream-cli
commands to monitor the CREAM ce.
</para>

<section id="Monitor_requires">
<title>Requirements</title>
<para>
The required packages for the CREAM CE probes are:
<itemizedlist>
    <listitem><para>python (version 2.4 or greater)</para></listitem>
    <listitem><para>python-ldap</para></listitem>
    <listitem><para>python-suds (version 0.3.5 or greater)</para></listitem>
    <listitem><para>openssl (version 0.9.8e-12 or greater)</para></listitem>
    <listitem><para>nagios-submit-conf (version 0.2 or greater)</para></listitem>
    <listitem><para>python-GridMon (version 1.1.10)</para></listitem>
</itemizedlist>
About the last two rpms they can be install using  the EGI 
<ulink url="http://repository.egi.eu/sw/production/sam/1/repofiles/sam.repo">repository</ulink>
</para>
</section><!-- end of Monitor_requires -->

<section id="Metrics">
<title>CREAM-CE direct job submission metrics and WN probes</title>
<para>
The following metrics are a restructured version of the existing
<ulink url="https://wiki.italiangrid.it/twiki/bin/view/CREAM/DjsCreamProbe">ones</ulink> and provide a better approach
for probing a CREAM CE and its WNs:
<itemizedlist>
    <listitem><para><literal>cream_serviceInfo.py</literal> - get CREAM CE service info</para></listitem>
    <listitem><para><literal>cream_allowedSubmission.py</literal> - check if the submission to the selected CREAM CE
    is allowed</para></listitem>
    <listitem><para><literal>cream_jobSubmit.py</literal> - submit a job directly to the selected
    CREAM CE</para></listitem>
    <listitem><para><literal>cream_jobCancel.py</literal> - cancel an active job.</para></listitem>
    <listitem><para><literal>cream_jobPurge.py</literal> - purge a terminted job.</para></listitem>
    <listitem><para><literal>WN-softver probe</literal> - check middleware version on WN
    (via cream_jobSubmit.py)</para></listitem>
    <listitem><para><literal>WN-csh probe</literal> - check if WN has csh (via cream_jobSubmit.py)</para></listitem>
</itemizedlist>
</para>

<para>
All of them have been implemented in python and are based on the
<ulink url="User_Guide.html#cream-command-line-interface-guide">cream-cli</ulink>commands. They share the same logic
structure and provide useful information about their version, usage (i.e. help) including the options list and their
meaning, according to the guide <ulink url="https://tomtools.cern.ch/confluence/display/SAMDOC/Probes+Development">
Probes Development</ulink><!-- TODO verify link -->. For example:
<screen>
$ ./cream_serviceInfo.py 
Usage: cream_serviceInfo.py [options]

cream_serviceInfo.py: error: Specify either option -u URL or option -H HOSTNAME (and -p PORT) or read the help (-h)

$ ./cream_serviceInfo.py --help
Usage: cream_serviceInfo.py [options]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -H HOSTNAME, --hostname=HOSTNAME
                        The hostname of the CREAM service.
  -p PORT, --port=PORT  The port of the service. [default: none]
  -x PROXY, --proxy=PROXY
                        The proxy path
  -t TIMEOUT, --timeout=TIMEOUT
                        Probe execution time limit. [default:
                        120 sec]
  -v, --verbose         verbose mode [default: False]
  -u URL, --url=URL     The status endpoint URL of the service. Example:
                        https://&lt;host&gt;[:&lt;port&gt;]

$ ./cream_serviceInfo.py --version
cream_serviceInfo v.1.0
</screen>
</para>

<para>
The interaction with the CREAM CE requires the use of a valid VOMS proxy expressed by the
<literal>X509_USER_PROXY</literal> env variable or through the <literal>--proxy</literal> option.
All metrics check the existence of the proxy file and calculate the time left. In case of error, the related error
message will be thrown:
<screen>
$ ./cream_serviceInfo.py --hostname cream-41.pd.infn.it --port 8443 --proxy /tmp/x509up_u0 --verbose
Proxy file not found or not readable
</screen>
</para>

<para>
The verbose mode (<literal>--verbose</literal>) could be enabled to each metric. It provides several details about
the probe execution itself by highlighting the internal commands:
<screen>
$ ./cream_serviceInfo.py --hostname cream-41.pd.infn.it --port 8443 -x /tmp/dteam.proxy --verbose
executing command: /usr/bin/voms-proxy-info -timeleft
invoking service info
executing command: /usr/bin/glite-ce-service-info cream-41.pd.infn.it:8443
OK: Service Version    = [1.16.1 - EMI version: 3.5.1-1.el6]
</screen>
</para>

<para>
In case of mistakes on the selected options or on their values, the probe tries to explain what is wrong.
For example the cream_serviceInfo doesn't support the <literal>--queue</literal> option:
<screen>
$ ./cream_serviceInfo.py --hostname cream-41.pd.infn.it --port 8443 --queue creamtest1 -x /tmp/dteam.proxy --verbose
Usage: cream_serviceInfo.py [options]

cream_serviceInfo.py: error: no such option: --queue
</screen>
</para>

<para>
In case of the errors in interacting with the CREAM CE, useful details will be provided about the failure:
<screen>
$ ./cream_allowedSubmission.py --url https://cream-43.pd.infn.it:8443 -x /tmp/dteam.proxy
command '/usr/bin/glite-ce-allowed-submission cream-43.pd.infn.it:8443' failed: return_code=1
details: ['2014-01-16 15:59:57,085 FATAL - Received NULL fault; the error is due to another cause: FaultString=[connection error] - FaultCode=[SOAP-ENV:Client] - FaultSubCode=[SOAP-ENV:Client] - FaultDetail=[Connection refused]\n']
</screen>
</para>

<para>
Sources are available in <ulink url="https://github.com/italiangrid/cream-nagios/tree/master/src">github</ulink>
</para>


<section id="cream_serviceInfo_py">
<title>cream_serviceInfo.py</title>
<para>
The serviceInfo.py retrieves information about the status of the CREAM CE.  The help shows how the probe must be invoked:
<screen>
$ ./cream_serviceInfo.py --help
Usage: cream_serviceInfo.py [options]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -H HOSTNAME, --hostname=HOSTNAME
                        The hostname of the CREAM service.
  -p PORT, --port=PORT  The port of the service. [default: none]
  -x PROXY, --proxy=PROXY
                        The proxy path
  -t TIMEOUT, --timeout=TIMEOUT
                        Probe execution time limit. [default:
                        120 sec]
  -v, --verbose         verbose mode [default: False]
  -u URL, --url=URL     The status endpoint URL of the service. Example:
                        https://&lt;host&gt;[:&lt;port&gt;]
</screen>
</para>

<para>
In order to get information about the CREAM service on the host https://cream-41.pd.infn.it:8443, use the following
command:
<screen>
$ ./cream_serviceInfo.py --url https://cream-41.pd.infn.it:8443 -x /tmp/dteam.proxy
OK: Service Version    = [1.16.1 - EMI version: 3.5.1-1.el6]
</screen>
or similary:
<screen>
$ ./cream_serviceInfo.py --hostname cream-41.pd.infn.it --port 8443 -x /tmp/dteam.proxy
OK: Service Version    = [1.16.1 - EMI version: 3.5.1-1.el6] 
</screen>
</para>
</section><!-- end of cream_serviceInfo_py -->

<section id="cream_allowedSubmission">
<title>cream_allowedSubmission</title>
<para>
This is a simple metric which checks if the submission to the selected CREAM CE is allowed. Its usage is analogous
to the above metric:
<screen>
$ ./cream_allowedSubmission.py --help
Usage: cream_allowedSubmission.py [options]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -H HOSTNAME, --hostname=HOSTNAME
                        The hostname of the CREAM service.
  -p PORT, --port=PORT  The port of the service. [default: none]
  -x PROXY, --proxy=PROXY
                        The proxy path
  -t TIMEOUT, --timeout=TIMEOUT
                        Probe execution time limit. [default:
                        120 sec]
  -v, --verbose         verbose mode [default: False]
  -u URL, --url=URL     The status endpoint URL of the service. Example:
                        https://&lt;host&gt;[:&lt;port&gt;]
</screen>
</para>
<para>
Notice: the use of the <literal>--url</literal> option is equivalent to specify both the options:
<literal>--hostname</literal> and <literal>--port</literal>:
<screen>
$ ./cream_allowedSubmission.py --hostname cream-41.pd.infn.it --port 8443 -x /tmp/dteam.proxy
OK: ENABLED

$ ./cream_allowedSubmission.py --url https://cream-41.pd.infn.it:8443 -x /tmp/dteam.proxy
OK: ENABLED
</screen>
</para>
<para>
The verbose mode highlights the internal commands:
<screen>
$ ./cream_allowedSubmission.py --url https://cream-41.pd.infn.it:8443 -x /tmp/dteam.proxy --verbose
executing command: /usr/bin/voms-proxy-info -timeleft
invoking allowedSubmission
executing command: /usr/bin/glite-ce-allowed-submission cream-41.pd.infn.it:8443
OK: ENABLED
</screen>
</para>
</section><!-- end of cream_allowedSubmission -->

<section id="cream_jobSubmit_py">
<title>cream_jobSubmit.py</title>
<para>
This metric submits a job directly to the selected CREAM CE and waits until the job termination by providing the final
status. Finally the job is purged.
Moreover the stage-in and stage-out phases are both performed automatically by the CE. In particular the stage-out
needs the <literal>OutputSandboxBaseDestUri="gsiftp://localhost"</literal> set in the JDL.
<screen>
$ ./cream_jobSubmit.py --help
Usage: cream_jobSubmit.py [options]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -H HOSTNAME, --hostname=HOSTNAME
                        The hostname of the CREAM service.
  -p PORT, --port=PORT  The port of the service. [default: none]
  -x PROXY, --proxy=PROXY
                        The proxy path
  -t TIMEOUT, --timeout=TIMEOUT
                        Probe execution time limit. [default:
                        120 sec]
  -v, --verbose         verbose mode [default: False]
  -u URL, --url=URL     The status endpoint URL of the service. Example:
                        https://&lt;host&gt;[:&lt;port&gt;]/cream-&lt;lrms&gt;-&lt;queue&gt;
  -l LRMS, --lrms=LRMS  The LRMS name (e.g.: 'lsf', 'pbs' etc)
  -q QUEUE, --queue=QUEUE
                        The queue name (e.g.: 'creamtest')
  -j JDL, --jdl=JDL     The jdl path
  -d DIR, --dir=DIR     The output sandbox path
</screen>
</para>

<para>
The <literal>--url</literal> (<literal>-u</literal>) directive must be used to target the probe to a specific CREAM CE
identified by its identifier (i.e. CREAM CE ID). Alternatively is it possible to specify the CREAM CE identifier by
using the <literal>--hostname</literal> , <literal>--port</literal>, <literal>--lrms</literal> and
<literal>--queue</literal> options which are mutually exclusive with respect to the <literal>--url</literal> option.
Consider the JDL file hostname.jdl with the following content:
<screen>
$ cat ./hostname.jdl
[
Type="Job";
JobType="Normal";
Executable = "/bin/hostname";
Arguments = "-s";
StdOutput = "std.out";
StdError = "std.err";
OutputSandbox = {"std.out","std.err"};
OutputSandboxBaseDestUri="gsiftp://localhost";
]
</screen>
</para>

<para>
If verbose mode is disabled, the output should look like this:
<screen>
$ ./cream_jobSubmit.py --url https://cream-41.pd.infn.it:8443/cream-lsf-creamtest1 -x /tmp/dteam.proxy --jdl ./hostname.jdl 
DONE-OK: prod-wn-001
</screen>
Notice: the use of the <literal>--url</literal> option is equivalent to specify both the options:
<literal>--hostname</literal>, <literal>--port</literal> <literal>--lrms</literal> and --queue:
<screen>
$ ./cream_jobSubmit.py --hostname cream-41.pd.infn.it --port 8443 --lrms lsf --queue creamtest1 -x /tmp/dteam.proxy --jdl ./hostname.jdl 
DONE-OK: prod-wn-001
</screen>

If the verbose mode is enabled, the output of the above command should be like this:
<screen>
$ ./cream_jobSubmit.py --hostname cream-41.pd.infn.it --port 8443 --lrms lsf --queue creamtest1 -x /tmp/dteam.proxy --jdl ./hostname.jdl --verbose
executing command: /usr/bin/voms-proxy-info -timeleft
executing command: /usr/bin/glite-ce-job-submit -d -a -r cream-41.pd.infn.it:8443/cream-lsf-creamtest1 hostname.jdl
['2014-01-31 12:18:12,740 DEBUG - Using certificate proxy file [/tmp/dteam.proxy]\n', '2014-01-31 12:18:12,756 DEBUG - VO from certificate=[dteam]\n', '2014-01-31 12:18:12,756 WARN - No configuration file suitable for loading. Using built-in configuration\n', '2014-01-31 12:18:12,756 DEBUG - Logfile is [/tmp/glite_cream_cli_logs/glite-ce-job-submit_CREAM_root_20140131-121812.log]\n', '2014-01-31 12:18:12,760 INFO - certUtil::generateUniqueID() - Generated DelegationID: [e0b6d023c766400e8b27e51cf5a2b1fa179d78f9]\n', '2014-01-31 12:18:14,606 DEBUG - Registering to [https://cream-41.pd.infn.it:8443/ce-cream/services/CREAM2] JDL=[ StdOutput = "std.out"; BatchSystem = "lsf"; QueueName = "creamtest1"; Executable = "/bin/hostname"; Type = "Job"; Arguments = "-s"; JobType = "Normal"; OutputSandboxBaseDestUri = "gsiftp://localhost"; OutputSandbox = { "std.out","std.err" }; StdError = "std.err" ] - JDL File=[hostname.jdl]\n', '2014-01-31 12:18:14,942 DEBUG - Will invoke JobStart for JobID [CREAM446576112]\n', 'https://cream-41.pd.infn.it:8443/CREAM446576112\n']
job id: https://cream-41.pd.infn.it:8443/CREAM446576112
invoking jobStatus
executing command: /usr/bin/glite-ce-job-status https://cream-41.pd.infn.it:8443/CREAM446576112
['\n', '******  JobID=[https://cream-41.pd.infn.it:8443/CREAM446576112]\n', '\tStatus        = [DONE-OK]\n', '\tExitCode      = [0]\n', '\n', '\n']
exitCode=       ExitCode      = [0]

job status: DONE-OK
invoking getOutputSandbox
executing command: /usr/bin/glite-ce-job-output --noint --dir /tmp https://cream-41.pd.infn.it:8443/CREAM446576112
output sandbox dir: /tmp/cream-41.pd.infn.it_8443_CREAM446576112
invoking jobPurge
executing command: /usr/bin/glite-ce-job-purge --noint https://cream-41.pd.infn.it:8443/CREAM446576112
DONE-OK: prod-wn-001
</screen>
</para>

<para>
Notice the <literal>output sandbox dir: ./cream-41.pd.infn.it_8443_CREAM446576112</literal>.
This is the output sandbox directory containing all the produced files:
<screen>
$ ls -la ./cream-41.pd.infn.it_8443_CREAM446576112
total 12
drwxr-xr-x   2 root root 4096 17 gen 16:20 .
dr-xr-x---. 23 root root 4096 17 gen 16:20 ..
-rw-------   1 root root    0 17 gen 16:20 std.err
-rw-------   1 root root   26 17 gen 16:20 std.out
</screen>
</para>
</section><!-- end of cream_jobSubmit_py -->


<section id="cream_jobCancel_py">
<title>cream_jobCancel.py</title>
<para>
This metric submits a job directly to the selected CREAM CE, waits until the job gain the REALLY-RUNNING state and then
tries to cancel it. Finally it checks if the job has been correctly canceled.
<screen>
$ ./cream_jobCancel.py --help
Usage: cream_jobCancel.py [options]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -H HOSTNAME, --hostname=HOSTNAME
                        The hostname of the CREAM service.
  -p PORT, --port=PORT  The port of the service. [default: none]
  -x PROXY, --proxy=PROXY
                        The proxy path
  -t TIMEOUT, --timeout=TIMEOUT
                        Probe execution time limit. [default:
                        120 sec]
  -v, --verbose         verbose mode [default: False]
  -u URL, --url=URL     The status endpoint URL of the service. Example:
                        https://&lt;host&gt;[:&lt;port&gt;]/cream-&lt;lrms&gt;-&lt;queue&gt;
  -l LRMS, --lrms=LRMS  The LRMS name (e.g.: 'lsf', 'pbs' etc)
  -q QUEUE, --queue=QUEUE
                        The queue name (e.g.: 'creamtest')
  -j JDL, --jdl=JDL     The jdl path
</screen>
</para>

<para>
The job must be enough long in terms of execution time, in order to allow the probe to check the current job status and
invoke the glite-ce-job-cancel. For example consider the job (i.e. hostnane.jdl) of the above metric. In this case the
probe will fail because the job already terminated before the execution of the e glite-ce-job-cancel command:
<screen>
$ ./cream_jobCancel.py --url https://cream-41.pd.infn.it:8443/cream-lsf-creamtest1 -x /tmp/dteam.proxy --jdl ./hostname.jdl 
job already terminated
</screen>
Now consider the following job:
<screen>
$ cat ./sleep.jdl 
[
Type="Job";
JobType="Normal";
Executable = "/bin/sleep";
Arguments = "200";
StdOutput = "cream.out";
StdError = "cream.out";
]
</screen>
The output of the probe should be like:
<screen>
$ ./cream_jobCancel.py --url https://cream-41.pd.infn.it:8443/cream-lsf-creamtest1 -x /tmp/dteam.proxy --jdl ./sleep.jdl 
OK: job cancelled
</screen>
or like this with <literal>--verbose</literal> option specified:
<screen>
$ ./cream_jobCancel.py --url https://cream-41.pd.infn.it:8443/cream-lsf-creamtest1 -x /tmp/dteam.proxy --jdl ./sleep.jdl --verbose
executing command: /usr/bin/voms-proxy-info -timeleft
executing command: /usr/bin/glite-ce-job-submit -d -a -r cream-41.pd.infn.it:8443/cream-lsf-creamtest1 ./sleep.jdl
['2014-01-31 12:30:42,469 DEBUG - Using certificate proxy file [/tmp/dteam.proxy]\n', '2014-01-31 12:30:42,489 DEBUG - VO from certificate=[dteam]\n', '2014-01-31 12:30:42,489 WARN - No configuration file suitable for loading. Using built-in configuration\n', '2014-01-31 12:30:42,489 DEBUG - Logfile is [/tmp/glite_cream_cli_logs/glite-ce-job-submit_CREAM_root_20140131-123042.log]\n', '2014-01-31 12:30:42,493 INFO - certUtil::generateUniqueID() - Generated DelegationID: [59882bed5243b5788a83404ad027cf571319ef79]\n', '2014-01-31 12:30:44,059 DEBUG - Registering to [https://cream-41.pd.infn.it:8443/ce-cream/services/CREAM2] JDL=[ StdOutput = "cream.out"; BatchSystem = "lsf"; QueueName = "creamtest1"; Executable = "/bin/sleep"; Type = "Job"; Arguments = "200"; JobType = "Normal"; StdError = "cream.out" ] - JDL File=[./sleep.jdl]\n', '2014-01-31 12:30:44,368 DEBUG - Will invoke JobStart for JobID [CREAM076606856]\n', 'https://cream-41.pd.infn.it:8443/CREAM076606856\n']
job id: https://cream-41.pd.infn.it:8443/CREAM076606856
invoking jobStatus
executing command: /usr/bin/glite-ce-job-status https://cream-41.pd.infn.it:8443/CREAM076606856
['\n', '******  JobID=[https://cream-41.pd.infn.it:8443/CREAM076606856]\n', '\tStatus        = [REALLY-RUNNING]\n', '\n', '\n']
job status: REALLY-RUNNING
invoking jobCancel
executing command: /usr/bin/glite-ce-job-cancel --noint https://cream-41.pd.infn.it:8443/CREAM076606856
invoking jobStatus
executing command: /usr/bin/glite-ce-job-status https://cream-41.pd.infn.it:8443/CREAM076606856
['\n', '******  JobID=[https://cream-41.pd.infn.it:8443/CREAM076606856]\n', '\tStatus        = [REALLY-RUNNING]\n', '\n', '\n']
job status: REALLY-RUNNING
invoking jobStatus
executing command: /usr/bin/glite-ce-job-status https://cream-41.pd.infn.it:8443/CREAM076606856
['\n', '******  JobID=[https://cream-41.pd.infn.it:8443/CREAM076606856]\n', '\tStatus        = [CANCELLED]\n', '\tExitCode      = []\n', '\tDescription   = [Cancelled by user]\n', '\n', '\n']
exitCode=       ExitCode      = []

job status: CANCELLED
invoking jobPurge
executing command: /usr/bin/glite-ce-job-purge --noint https://cream-41.pd.infn.it:8443/CREAM076606856
OK: job cancelled
</screen>
</para>
</section><!-- end of cream_jobCancel_py -->

<section id="cream_jobPurge_py">
<title>cream_jobPurge.py</title>
<para>
This metric is analogous of cream_jobCancel.py. It submits a short job (e.g. hostname.jdl), waits its termination
(e.g  DONE-OK) and then it tries to purge it. Finally, in order to verify the purging operation was successfully
executed, the probe checks the job status by executing the glite-ce-job-status command which just in this scenario,
must fail because the job doesn't exist anymore.
<screen>
$ ./cream_jobPurge.py --help
Usage: cream_jobPurge.py [options]

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -H HOSTNAME, --hostname=HOSTNAME
                        The hostname of the CREAM service.
  -p PORT, --port=PORT  The port of the service. [default: none]
  -x PROXY, --proxy=PROXY
                        The proxy path
  -t TIMEOUT, --timeout=TIMEOUT
                        Probe execution time limit. [default:
                        120 sec]
  -v, --verbose         verbose mode [default: False]
  -u URL, --url=URL     The status endpoint URL of the service. Example:
                        https://&lt;host&gt;[:&lt;port&gt;]/cream-&lt;lrms&gt;-&lt;queue&gt;
  -l LRMS, --lrms=LRMS  The LRMS name (e.g.: 'lsf', 'pbs' etc)
  -q QUEUE, --queue=QUEUE
                        The queue name (e.g.: 'creamtest')
  -j JDL, --jdl=JDL     The jdl path
</screen>

<screen>
$ ./cream_jobPurge.py --url https://cream-41.pd.infn.it:8443/cream-lsf-creamtest1 -x /tmp/dteam.proxy --jdl ./hostname.jdl 
OK: job purged
</screen>

<screen>
$ ./cream_jobPurge.py --url https://cream-41.pd.infn.it:8443/cream-lsf-creamtest1 -x /tmp/dteam.proxy --jdl ./hostname.jdl --verbose
executing command: /usr/bin/voms-proxy-info -timeleft
executing command: /usr/bin/glite-ce-job-submit -d -a -r cream-41.pd.infn.it:8443/cream-lsf-creamtest1 hostname.jdl
['2014-01-31 12:27:50,347 DEBUG - Using certificate proxy file [/tmp/dteam.proxy]\n', '2014-01-31 12:27:50,364 DEBUG - VO from certificate=[dteam]\n', '2014-01-31 12:27:50,364 WARN - No configuration file suitable for loading. Using built-in configuration\n', '2014-01-31 12:27:50,364 DEBUG - Logfile is [/tmp/glite_cream_cli_logs/glite-ce-job-submit_CREAM_root_20140131-122750.log]\n', '2014-01-31 12:27:50,367 INFO - certUtil::generateUniqueID() - Generated DelegationID: [5978b3f267779dbf4d691889ea316a14dafeb4bb]\n', '2014-01-31 12:27:51,780 DEBUG - Registering to [https://cream-41.pd.infn.it:8443/ce-cream/services/CREAM2] JDL=[ StdOutput = "std.out"; BatchSystem = "lsf"; QueueName = "creamtest1"; Executable = "/bin/hostname"; Type = "Job"; Arguments = "-s"; JobType = "Normal"; OutputSandboxBaseDestUri = "gsiftp://localhost"; OutputSandbox = { "std.out","std.err" }; StdError = "std.err" ] - JDL File=[hostname.jdl]\n', '2014-01-31 12:27:52,109 DEBUG - Will invoke JobStart for JobID [CREAM973322659]\n', 'https://cream-41.pd.infn.it:8443/CREAM973322659\n']
job id: https://cream-41.pd.infn.it:8443/CREAM973322659
invoking jobStatus
executing command: /usr/bin/glite-ce-job-status https://cream-41.pd.infn.it:8443/CREAM973322659
['\n', '******  JobID=[https://cream-41.pd.infn.it:8443/CREAM973322659]\n', '\tStatus        = [DONE-OK]\n', '\tExitCode      = [0]\n', '\n', '\n']
exitCode=       ExitCode      = [0]

job status: DONE-OK
invoking jobPurge
executing command: /usr/bin/glite-ce-job-purge --noint https://cream-41.pd.infn.it:8443/CREAM973322659
invoking jobStatus
executing command: /usr/bin/glite-ce-job-status https://cream-41.pd.infn.it:8443/CREAM973322659
OK: job purged
</screen>
</para>
</section><!-- end of cream_jobPurge_py -->

<section id="WN-softver probe">
<title>WN-softver probe</title>
<para>
This probe checks the middleware version on a WN managed by the CREAM-CE. It makes use of cream_jobSubmit.py
in the following way:
<screen>
$ ./cream_jobSubmit.py --url https://cream-41.pd.infn.it:8443/cream-lsf-creamtest1 -x /tmp/dteam.proxy -j ./WN-softver.jdl
DONE-OK: prod-wn-002 has EMI 1.11.0-1
</screen>
where
<screen>
$ cat WN-softver.jdl
[
Type="Job";
JobType="Normal";
Executable = "WN-softver.sh";
#Arguments = "a b c";
StdOutput = "std.out";
StdError = "std.err";
InputSandbox = {"WN-softver.sh"};
OutputSandbox = {"std.out","std.err"};
OutputSandboxBaseDestUri="gsiftp://localhost";
]
</screen>
and <ulink url="https://wiki.italiangrid.it/twiki/pub/CREAM/DjsCreamProbeNew/WN-softver.sh">WN-softver.sh</ulink>
is attached.
</para>
<para>
The verbose option enabled gives the following output:
<screen>
$ ./cream_jobSubmit.py --url https://cream-41.pd.infn.it:8443/cream-lsf-creamtest1 -x /tmp/dteam.proxy -j ./WN-softver.jdl --verbose
executing command: /usr/bin/voms-proxy-info -timeleft
executing command: /usr/bin/glite-ce-job-submit -d -a -r cream-41.pd.infn.it:8443/cream-lsf-creamtest1 ./WN-softver.jdl
['2014-01-31 13:05:05,802 DEBUG - Using certificate proxy file [/tmp/dteam.proxy]\n', '2014-01-31 13:05:05,823 DEBUG - VO from certificate=[dteam]\n', '2014-01-31 13:05:05,824 WARN - No configuration file suitable for loading. Using built-in configuration\n', '2014-01-31 13:05:05,824 DEBUG - Logfile is [/tmp/glite_cream_cli_logs/glite-ce-job-submit_CREAM_root_20140131-130505.log]\n', '2014-01-31 13:05:05,824 DEBUG - Processing file [WN-softver.sh]...\n', '2014-01-31 13:05:05,824 DEBUG - Adding absolute path [/root/WN-softver.sh]...\n', '2014-01-31 13:05:05,824 DEBUG - Inserting mangled InputSandbox in JDL: [{"/root/WN-softver.sh"}]...\n', '2014-01-31 13:05:05,827 INFO - certUtil::generateUniqueID() - Generated DelegationID: [b18342097b01b309cc9112a683d4c6bd15d35796]\n', '2014-01-31 13:05:07,517 DEBUG - Registering to [https://cream-41.pd.infn.it:8443/ce-cream/services/CREAM2] JDL=[ StdOutput = "std.out"; BatchSystem = "lsf"; QueueName = "creamtest1"; Executable = "WN-softver.sh"; Type = "Job"; JobType = "Normal"; OutputSandboxBaseDestUri = "gsiftp://localhost"; OutputSandbox = { "std.out","std.err" }; InputSandbox = { "/root/WN-softver.sh" }; StdError = "std.err" ] - JDL File=[./WN-softver.jdl]\n', '2014-01-31 13:05:07,870 DEBUG - JobID=[https://cream-41.pd.infn.it:8443/CREAM680089855]\n', '2014-01-31 13:05:07,871 DEBUG - UploadURL=[gsiftp://cream-41.pd.infn.it/var/glite/cream_sandbox/dteam/CN_Marco_Verlato_L_Padova_OU_Personal_Certificate_O_INFN_C_IT_dteam_Role_NULL_Capability_NULL_dteam019/68/CREAM680089855/ISB]\n', '2014-01-31 13:05:07,873 INFO - Sending file [gsiftp://cream-41.pd.infn.it/var/glite/cream_sandbox/dteam/CN_Marco_Verlato_L_Padova_OU_Personal_Certificate_O_INFN_C_IT_dteam_Role_NULL_Capability_NULL_dteam019/68/CREAM680089855/ISB/WN-softver.sh]\n', '2014-01-31 13:05:08,044 DEBUG - Will invoke JobStart for JobID [CREAM680089855]\n', 'https://cream-41.pd.infn.it:8443/CREAM680089855\n']
job id: https://cream-41.pd.infn.it:8443/CREAM680089855
invoking jobStatus
executing command: /usr/bin/glite-ce-job-status https://cream-41.pd.infn.it:8443/CREAM680089855
['\n', '******  JobID=[https://cream-41.pd.infn.it:8443/CREAM680089855]\n', '\tStatus        = [DONE-OK]\n', '\tExitCode      = [0]\n', '\n', '\n']
exitCode=       ExitCode      = [0]

job status: DONE-OK
invoking getOutputSandbox
executing command: /usr/bin/glite-ce-job-output --noint https://cream-41.pd.infn.it:8443/CREAM680089855
output sandbox dir: ./cream-41.pd.infn.it_8443_CREAM680089855
invoking jobPurge
executing command: /usr/bin/glite-ce-job-purge --noint https://cream-41.pd.infn.it:8443/CREAM680089855
DONE-OK: prod-wn-002 has EMI 1.11.0-1
</screen>
</para>
</section><!-- end of WN-softver probe -->

<section id="WN-csh probe">
<title>WN-csh probe</title>
<para>
This probe checks that csh is there on a WN managed by the CREAM-CE. It makes use of cream_jobSubmit.py in the
following way:
<screen>
$ ./cream_jobSubmit.py --url https://cream-41.pd.infn.it:8443/cream-lsf-creamtest1 -x /tmp/dteam.proxy -j ./WN-csh.jdl
DONE-OK: prod-wn-002 has csh
</screen>
where
<screen>
$ cat WN-csh.jdl
[
Type="Job";
JobType="Normal";
Executable = "WN-csh.sh";
#Arguments = "a b c";
StdOutput = "std.out";
StdError = "std.err";
InputSandbox = {"WN-csh.sh"};
OutputSandbox = {"std.out","std.err"};
OutputSandboxBaseDestUri="gsiftp://localhost";
]
</screen>
and <ulink url="https://wiki.italiangrid.it/twiki/pub/CREAM/DjsCreamProbeNew/WN-csh.sh">WN-csh.sh</ulink>
is attached.
</para>
</section><!-- end of WN-csh probe -->

<section id="Deployment_example">
<title>Deployment example</title>
<para>
In a Nagios server version 3.5.0 testing instance, we deployed the files needed to execute the probes described above in the following directories:
<screen>
$ ls -l /usr/libexec/grid-monitoring/probes/emi.cream/
total 48
-rwxr-xr-x 1 root root  1361 Jan 30 16:58 cream_allowedSubmission.py
-rwxr-xr-x 1 root root  2494 Jan 30 17:00 cream_jobCancel.py
-rwxr-xr-x 1 root root  2103 Jan 30 17:01 cream_jobPurge.py
-rwxr-xr-x 1 root root  2972 Jan 31 12:42 cream_jobSubmit.py
-rwxr-xr-x 1 root root 15527 Jan 30 16:29 cream.py
-rwxr-xr-x 1 root root  1416 Jan 31 12:42 cream_serviceInfo.py
-rw-r--r-- 1 root root   213 Jan 29 14:26 hostname.jdl
-rw-r--r-- 1 root root   129 Jan 30 16:21 sleep.jdl
drwxr-xr-x 2 root root  4096 Jan 31 11:34 wn
</screen>
and
<screen>
$ ls -l /usr/libexec/grid-monitoring/probes/emi.cream/wn
total 16
-rw-r--r-- 1 root root  292 Jan 31 11:34 WN-csh.jdl
-rwxr-xr-x 1 root root  603 Jan 31 11:34 WN-csh.sh
-rw-r--r-- 1 root root  300 Jan 31 11:34 WN-softver.jdl
-rwxr-xr-x 1 root root 1144 Jan 31 11:34 WN-softver.sh
</screen>
and defined the new services adding in the file <literal>/etc/nagios/objects/services.cfg</literal> the following lines:

<screen>
define service{
        use                             local-service
        host_name                       cream-41.pd.infn.it
        service_description             emi.cream.CEDIRECT-AllowedSubmission
        check_command                   ncg_check_native!/usr/libexec/grid-monit
oring/probes/emi.cream/cream_allowedSubmission.py!60!-x /tmp/dteam.proxy -p 8443
        normal_check_interval           6
        retry_check_interval            3
        max_check_attempts              2
        obsess_over_service             0
}
define service{
        use                             local-service
        host_name                       cream-41.pd.infn.it
        service_description             emi.cream.CEDIRECT-JobCancel
        check_command                   ncg_check_native!/usr/libexec/grid-monit
oring/probes/emi.cream/cream_jobCancel.py!60!-x /tmp/dteam.proxy -p 8443 -l lsf 
-q creamtest1 -j /usr/libexec/grid-monitoring/probes/emi.cream/sleep.jdl
        normal_check_interval           6
        retry_check_interval            3
        max_check_attempts              2
        obsess_over_service             0
}
define service{
        use                             local-service
        host_name                       cream-41.pd.infn.it
        service_description             emi.cream.CEDIRECT-JobPurge
        check_command                   ncg_check_native!/usr/libexec/grid-monit
oring/probes/emi.cream/cream_jobPurge.py!60!-x /tmp/dteam.proxy -p 8443 -l lsf -
q creamtest1 -j /usr/libexec/grid-monitoring/probes/emi.cream/hostname.jdl
        normal_check_interval           6
        retry_check_interval            3
        max_check_attempts              2
        obsess_over_service             0
}

define service{
        use                             local-service
        host_name                       cream-41.pd.infn.it
        service_description             emi.cream.CEDIRECT-ServiceInfo
        check_command                   ncg_check_native!/usr/libexec/grid-monit
oring/probes/emi.cream/cream_serviceInfo.py!60!-x /tmp/dteam.proxy -p 8443
        normal_check_interval           6
        retry_check_interval            3
        max_check_attempts              2
        obsess_over_service             0
}
define service{
        use                             local-service
        host_name                       cream-41.pd.infn.it
        service_description             emi.cream.CEDIRECT-JobSubmit
        check_command                   ncg_check_native!/usr/libexec/grid-monit
oring/probes/emi.cream/cream_jobSubmit.py!60!-x /tmp/dteam.proxy -p 8443 -l lsf 
-q creamtest1 -j /usr/libexec/grid-monitoring/probes/emi.cream/hostname.jdl --di
r /tmp 
        normal_check_interval           6
        retry_check_interval            3
        max_check_attempts              2
        obsess_over_service             0
}
define service{
        use                             local-service
        host_name                       cream-41.pd.infn.it
        service_description             emi.cream.WN-Softver
        check_command                   ncg_check_native!/usr/libexec/grid-monit
oring/probes/emi.cream/cream_jobSubmit.py!60!-x /tmp/dteam.proxy -p 8443 -l lsf 
-q creamtest1 -j /usr/libexec/grid-monitoring/probes/emi.cream/wn/WN-softver.jdl
 --dir /tmp
        normal_check_interval           6
        retry_check_interval            3
        max_check_attempts              2
        obsess_over_service             0
}
define service{
        use                             local-service
        host_name                       cream-41.pd.infn.it
        service_description             emi.cream.WN-Csh
        check_command                   ncg_check_native!/usr/libexec/grid-monit
oring/probes/emi.cream/cream_jobSubmit.py!60!-x /tmp/dteam.proxy -p 8443 -l lsf 
-q creamtest1 -j /usr/libexec/grid-monitoring/probes/emi.cream/wn/WN-csh.jdl --d
ir /tmp

        normal_check_interval           6
        retry_check_interval            3
        max_check_attempts              2
        obsess_over_service             0
}
</screen>
</para>

<para>
The check_command ncg_check_native was defined in the file <literal>/etc/nagios/objects/commands.cfg</literal> as below:
<screen>
define command{
        command_name                    ncg_check_native
        command_line                    $ARG1$ -H $HOSTNAME$ -t $ARG2$ $ARG3$
}
</screen>
</para>

<!-- TODO missing section with images -->
</section><!-- end of Deployment_example -->


</section><!-- end of Metrics -->


<!-- section id="">
<title></title>
<para>
</para>
</section --><!-- end of  -->

</chapter>
